<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>OrangeZh</title>
  
  <subtitle>Welcome to orangeZh`s Blog!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zxclljf.github.io/"/>
  <updated>2019-05-29T08:53:26.940Z</updated>
  <id>https://zxclljf.github.io/</id>
  
  <author>
    <name>OrangeZh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java学习笔记（基础）--Java基础知识篇</title>
    <link href="https://zxclljf.github.io/2019/05/29/Java/Java%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/Java%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89-Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%AF%87/"/>
    <id>https://zxclljf.github.io/2019/05/29/Java/Java学习日志/Java学习日志（基础）-Java基础知识篇/</id>
    <published>2019-05-29T02:20:35.000Z</published>
    <updated>2019-05-29T08:53:26.940Z</updated>
    
    <content type="html"><![CDATA[<p>##1. 面向对象和面向过程的区别</p><p>###面向过程<br><strong>优点：</strong> 性能比面向对象高。因为类调用时需要实例化，开销比较大，比较消耗资源，所以当性能是最重要的考量因素的时候，比如单片机、嵌入式开发、Linux/Unix等一般采用面向过程开发</p><p><strong>缺点：</strong> 没有面向对象易维护、易复用、易扩展</p><p>###面向对象<br><strong>优点：</strong> 易维护、易复用、易扩展，由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，使系统更加灵活、更加易于维护</p><p><strong>缺点：</strong> 性能比面向过程低<br><a id="more"></a></p><p>##2. Java 语言有哪些特点?</p><ol><li>简单易学；</li><li>面向对象（封装，继承，多态）；</li><li>平台无关性（ Java 虚拟机实现平台无关性）；</li><li>可靠性、安全性；</li><li>支持多线程（ C++ 语言没有内置的多线程机制，因此必须调用操作系统的多线程功能来进行多线程程序设计，而 Java 语言却提供了多线程支持）；</li><li>支持网络编程并且很方便（ Java 语言诞生本身就是为简化网络编程设计的，因此 Java 语言不仅支持网络编程而且很方便）；</li><li>编译与解释并存；</li></ol><h2 id="3、Java语言的安全性的体现"><a href="#3、Java语言的安全性的体现" class="headerlink" title="3、Java语言的安全性的体现"></a>3、Java语言的安全性的体现</h2><ol><li>严格遵循面向对象的规范。这样封装了数据细节，只提供接口给用户。增加了数据级的安全性。</li><li>无指针运算。java中的操作，除了基本类型都是引用的操作。引用是不能进行增减运算，不能被直接赋予内存地址的，从而增加了内存级的安全性。</li><li>数组边界检查。这样就不会出现C/C++中的缓存溢出等安全漏洞。</li><li>强制类型转换。非同类型的对象之间不能进行转换，否则会抛出ClassCastException</li><li>程安全的支持。java从语言级支持线程。从而从语法和语言本身做了很多对线程的控制和支持。</li><li>java的安全还通过编译器、检验器、类装载器、建立安全策略等方式保证了java程序的安全性</li></ol><p>Java最基本的安全性有三个：</p><p>第一，就是garbage collection，garbage collector会让你的程序不容易出现内存泄露。内存泄露是很危险的，在内存泄露的时候黑客可以黑你的电脑。</p><p>第二，就是exception，你有没有发现你想用呗null赋值的东西会出Exception？这个就是exception的好处。出现exception的时候程序员可以让程序停止运行，这样的话就不会被黑客黑了。</p><p>第三，就是指针,JAVA里面没有指针！这样的话人们就不能access不该access的内存了。C的话就非常危险了，黑客可以让C的程序stack overflow， 然后在overflow的内存地址跳到一个不该跳的地方。</p><p>##4. 关于 JVM JDK 和 JRE 最详细通俗的解答</p><p>###JVM<br>Java虚拟机（JVM）是运行 Java 字节码的虚拟机。JVM有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。</p><p>###什么是字节码?采用字节码的好处是什么?</p><blockquote><p>在 Java 中，JVM可以理解的代码就叫做字节码（即扩展名为 .class 的文件），它不面向任何特定的处理器，只面向虚拟机。Java 语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以 Java 程序运行时比较高效，而且，由于字节码并不针对一种特定的机器，因此，Java程序无须重新编译便可在多种不同操作系统的计算机上运行。</p></blockquote><p>###Java 程序从源代码到运行一般有下面3步：</p><p><img src="https://camo.githubusercontent.com/8f6eceddf64b5948c69a398d1a0e777c9c7f8e5b/68747470733a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f4a6176612532302545372541382538422545352542412538462545382542462539302545382541312538432545382542462538372545372541382538422e706e67" alt=""></p><p>我们需要格外注意的是 .class-&gt;机器码 这一步。在这一步 JVM 类加载器首先加载字节码文件，然后通过解释器逐行解释执行，这种方式的执行速度会相对比较慢。而且，有些方法和代码块是经常需要被调用的(也就是所谓的热点代码)，所以后面引进了 JIT 编译器，而JIT 属于运行时编译。当 JIT 编译器完成第一次编译后，其会将字节码对应的机器码保存下来，下次可以直接使用。而我们知道，机器码的运行效率肯定是高于 Java 解释器的。这也解释了我们为什么经常会说 Java 是编译与解释共存的语言。</p><blockquote><p>HotSpot采用了惰性评估(Lazy Evaluation)的做法，根据二八定律，消耗大部分系统资源的只有那一小部分的代码（热点代码），而这也就是JIT所需要编译的部分。JVM会根据代码每次被执行的情况收集信息并相应地做出一些优化，因此执行的次数越多，它的速度就越快。JDK 9引入了一种新的编译模式AOT(Ahead of Time Compilation)，它是直接将字节码编译成机器码，这样就避免了JIT预热等各方面的开销。JDK支持分层编译和AOT协作使用。但是 ，AOT 编译器的编译质量是肯定比不上 JIT 编译器的。</p></blockquote><p>总结：Java虚拟机（JVM）是运行 Java 字节码的虚拟机。JVM有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。字节码和不同系统的 JVM 实现是 Java 语言“一次编译，随处可以运行”的关键所在。</p><p>###JDK 和 JRE<br>JDK是Java Development Kit，它是功能齐全的Java SDK。它拥有JRE所拥有的一切，还有编译器（javac）和工具（如javadoc和jdb）。它能够创建和编译程序。</p><p>JRE 是 Java运行时环境。它是运行已编译 Java 程序所需的所有内容的集合，包括 Java虚拟机（JVM），Java类库，java命令和其他的一些基础构件。但是，它不能用于创建新程序。</p><p>如果你只是为了运行一下 Java 程序的话，那么你只需要安装 JRE 就可以了。如果你需要进行一些 Java 编程方面的工作，那么你就需要安装JDK了。但是，这不是绝对的。有时，即使您不打算在计算机上进行任何Java开发，仍然需要安装JDK。例如，如果要使用JSP部署Web应用程序，那么从技术上讲，您只是在应用程序服务器中运行Java程序。那你为什么需要JDK呢？因为应用程序服务器会将 JSP 转换为 Java servlet，并且需要使用 JDK 来编译 servlet。</p><h2 id="5-Oracle-JDK-和-OpenJDK-的对比"><a href="#5-Oracle-JDK-和-OpenJDK-的对比" class="headerlink" title="5. Oracle JDK 和 OpenJDK 的对比"></a>5. Oracle JDK 和 OpenJDK 的对比</h2><p>可能在看这个问题之前很多人和我一样并没有接触和使用过 OpenJDK 。那么Oracle和OpenJDK之间是否存在重大差异？下面我通过收集到的一些资料，为你解答这个被很多人忽视的问题。</p><p>对于Java 7，没什么关键的地方。OpenJDK项目主要基于Sun捐赠的HotSpot源代码。此外，OpenJDK被选为Java 7的参考实现，由Oracle工程师维护。关于JVM，JDK，JRE和OpenJDK之间的区别，Oracle博客帖子在2012年有一个更详细的答案：</p><blockquote><p>问：OpenJDK存储库中的源代码与用于构建Oracle JDK的代码之间有什么区别？</p></blockquote><blockquote><p>答：非常接近 - 我们的Oracle JDK版本构建过程基于OpenJDK 7构建，只添加了几个部分，例如部署代码，其中包括Oracle的Java插件和Java WebStart的实现，以及一些封闭的源代码派对组件，如图形光栅化器，一些开源的第三方组件，如Rhino，以及一些零碎的东西，如附加文档或第三方字体。展望未来，我们的目的是开源Oracle JDK的所有部分，除了我们考虑商业功能的部分。</p></blockquote><p>总结：</p><ol><li>Oracle JDK版本将每三年发布一次，而OpenJDK版本每三个月发布一次；</li><li>OpenJDK 是一个参考模型并且是完全开源的，而Oracle JDK是OpenJDK的一个实现，并不是完全开源的；</li><li>Oracle JDK 比 OpenJDK 更稳定。OpenJDK和Oracle JDK的代码几乎相同，但Oracle JDK有更多的类和一些错误修复。因此，如果您想开发企业/商业软件，我建议您选择Oracle JDK，因为它经过了彻底的测试和稳定。某些情况下，有些人提到在使用OpenJDK 可能会遇到了许多应用程序崩溃的问题，但是，只需切换到Oracle JDK就可以解决问题；</li><li>在响应性和JVM性能方面，Oracle JDK与OpenJDK相比提供了更好的性能；</li><li>Oracle JDK不会为即将发布的版本提供长期支持，用户每次都必须通过更新到最新版本获得支持来获取最新版本；</li><li><p>Oracle JDK根据二进制代码许可协议获得许可，而OpenJDK根据GPL v2许可获得许可。</p><h2 id="6-Java和C-的区别"><a href="#6-Java和C-的区别" class="headerlink" title="6. Java和C++的区别?"></a>6. Java和C++的区别?</h2><p>很多人没学过 C++，但是面试官就是没事喜欢拿 Java 和 C++ 比呀！没办法！！！就算没学过C++，也要记下来！</p></li><li><p>都是面向对象的语言，都支持封装、继承和多态</p></li><li>Java 不提供指针来直接访问内存，程序内存更加安全</li><li>Java 的类是单继承的，C++ 支持多重继承；虽然 Java 的类不可以多继承，但是接口可以多继承。</li><li>Java 有自动内存管理机制，不需要程序员手动释放无用内存</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##1. 面向对象和面向过程的区别&lt;/p&gt;
&lt;p&gt;###面向过程&lt;br&gt;&lt;strong&gt;优点：&lt;/strong&gt; 性能比面向对象高。因为类调用时需要实例化，开销比较大，比较消耗资源，所以当性能是最重要的考量因素的时候，比如单片机、嵌入式开发、Linux/Unix等一般采用面向过程开发&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt; 没有面向对象易维护、易复用、易扩展&lt;/p&gt;
&lt;p&gt;###面向对象&lt;br&gt;&lt;strong&gt;优点：&lt;/strong&gt; 易维护、易复用、易扩展，由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，使系统更加灵活、更加易于维护&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt; 性能比面向过程低&lt;br&gt;
    
    </summary>
    
      <category term="Java" scheme="https://zxclljf.github.io/categories/Java/"/>
    
      <category term="Java学习日志" scheme="https://zxclljf.github.io/categories/Java/Java%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="Java" scheme="https://zxclljf.github.io/tags/Java/"/>
    
      <category term="Java学习日志" scheme="https://zxclljf.github.io/tags/Java%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>PHP学习日志（一）--本地搭建Apache+多PHP版本环境（WAMP）</title>
    <link href="https://zxclljf.github.io/2018/05/11/PHP/PHP%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/PHP%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97%EF%BC%88%E4%B8%80%EF%BC%89-%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BAApache-%E5%A4%9APHP%E7%89%88%E6%9C%AC%E7%8E%AF%E5%A2%83/"/>
    <id>https://zxclljf.github.io/2018/05/11/PHP/PHP学习日志/PHP学习日志（一）-本地搭建Apache-多PHP版本环境/</id>
    <published>2018-05-11T01:46:41.000Z</published>
    <updated>2019-05-21T03:03:21.474Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>都说PHP是世界上最好的编程语言，啊哈哈~<br>其实语言都是实现解决方案的技术支持，重要的在于解决方案，语言以及框架只是提供技术选型，当然会一门或者多门编程语言是一个程序员必备的技能，也是一个程序员的饭碗，所以精通一门或者多门语言及框架是必要的。</p></blockquote><p>下面是个人的PHP学习日志，仅供参考，如有不足之处请多多指教，相互学习交流。<br>什么PHP的发展、故事什么的我就不写了，百度百科~😴</p><p>OK，进入主题吧，第一篇是搭建本地的PHP环境，我的电脑是Win10，后面会有专门篇章讲解如何在Linux上搭建<code>LAMP(Linux+Apache+Mysql+PHP)</code>和<code>LNMP(Linux+Nginx+Mysql+PHP)</code></p><p>个人喜欢手动搭建环境，所以也就没有使用集成环境了，如果觉得费事可以考虑直接使用集成环境哈~😴<br><a id="more"></a></p><h2 id="Apache安装配置"><a href="#Apache安装配置" class="headerlink" title="Apache安装配置"></a>Apache安装配置</h2><h3 id="Apache安装"><a href="#Apache安装" class="headerlink" title="Apache安装"></a>Apache安装</h3><p><a href="https://www.apachehaus.com/cgi-bin/download.plx" target="_blank" rel="noopener">Apache下载地址</a></p><p>将Apache源码下载后解压到你想存放的文件夹下，我的文件夹目录：<code>D:\OZ-Dev\PHP\tools\Apache24</code>,然后cmd进入Apache24目录，输入以下命令进行安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd.exe -k install</span><br></pre></td></tr></table></figure></p><p>其他详细命令参考：<a href="http://httpd.apache.org/docs/current/platform/windows.html#down" target="_blank" rel="noopener">http://httpd.apache.org/docs/current/platform/windows.html#down</a></p><p>安装完成后，进入<code>Apache24/bin</code>目录，双击 <code>ApacheMonitor.exe</code>,然后就可以在这里停止、启动、重启Apache服务了。<br><img src="https://i.imgur.com/Ov5Rivg.png" alt=""><br>在浏览器里面输入：<a href="http://localhost/" target="_blank" rel="noopener">http://localhost/</a> 就可验证是否安装成功了</p><h3 id="Apache配置"><a href="#Apache配置" class="headerlink" title="Apache配置"></a>Apache配置</h3><p>使用编辑器打开 <code>Apache24/conf/httpd.conf</code> 配置文件，分别修改以下配置：</p><ol><li><p>修改SRVROOT</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Define SRVROOT &quot;D:/OZ-Dev/PHP/tools/Apache24&quot;</span><br></pre></td></tr></table></figure></li><li><p>开启重写rewrite</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoadModule rewrite_module modules/mod_rewrite.so</span><br></pre></td></tr></table></figure></li><li><p>修改DocumentRoot</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DocumentRoot &quot;D:/OZ-Dev/PHP/WorkSpace&quot;</span><br><span class="line">&lt;Directory &quot;D:/OZ-Dev/PHP/WorkSpace&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p>新增index.php到DirectoryIndex</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule dir_module&gt;</span><br><span class="line">    DirectoryIndex index.html index.php</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置多虚拟主机<br>在你的WorkSpace中新增一个index文件夹，再再index中随意新增一个index.html文件，我的路径：<code>D:\OZ-Dev\PHP\WorkSpace\index</code><br>使用编辑器打开 <code>Apache24/conf/extra/httpd-vhosts.conf</code> 配置文件,新增如下配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerAdmin 15708486258@163.com</span><br><span class="line">    DocumentRoot &quot;D:\OZ-Dev\PHP\WorkSpace\index&quot;</span><br><span class="line">    ServerName zxc.index.com</span><br><span class="line">    ErrorLog &quot;logs/zxc.index.com-error.log&quot;</span><br><span class="line">    CustomLog &quot;logs/zxc.index.com-access.log&quot; common</span><br><span class="line">&lt;Directory &quot;D:\OZ-Dev\PHP\WorkSpace\index&quot; &gt;</span><br><span class="line">  Options Indexes FollowSymLinks</span><br><span class="line">      AllowOverride All</span><br><span class="line">      Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></li></ol><p>然后用编辑器打开<code>C:\Windows\System32\drivers\etc</code>目录下的<code>hosts</code>文件，添加自定义解析:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 zxc.index.com</span><br></pre></td></tr></table></figure></p><p><span style="color:red">注意：<code>hosts</code>文件的修改需要管理员权限，推荐下载notepad++打开进行修改，或者其他方法请自行百度。</span><br>重启Apache，在浏览器中输入<code>http://zxc.index.com</code>,即可验证虚拟主机是否搭建成功。</p><h2 id="Mysql下载安装"><a href="#Mysql下载安装" class="headerlink" title="Mysql下载安装"></a>Mysql下载安装</h2><p><a href="https://dev.mysql.com/downloads/windows/installer/8.0.html" target="_blank" rel="noopener">Mysql下载地址</a><br>安装步骤就不一一贴图了<br>推荐一个破解版的MySQL工具，使用简单<br>下载：<a href="https://pan.baidu.com/s/10nxkjp6PJi_vwLrgJxHGHA" target="_blank" rel="noopener">Navicatformysql</a><br>下载解压后先复制<code>txt</code>中的key，然后进入<code>Navicat for MySQL</code>文件夹运行<code>navicat.exe</code>程序，提示激活的窗口，将key粘贴进去即可激活使用。</p><h2 id="PHP安装配置（下载配置PHP5和PHP7，可手动切换）"><a href="#PHP安装配置（下载配置PHP5和PHP7，可手动切换）" class="headerlink" title="PHP安装配置（下载配置PHP5和PHP7，可手动切换）"></a>PHP安装配置（下载配置PHP5和PHP7，可手动切换）</h2><h3 id="PHP下载"><a href="#PHP下载" class="headerlink" title="PHP下载"></a>PHP下载</h3><p>PHP下载地址：</p><ul><li>PHP5：<a href="https://windows.php.net/download#php-5.6" target="_blank" rel="noopener">https://windows.php.net/download#php-5.6</a></li><li>PHP7：<a href="https://windows.php.net/download#php-7.2" target="_blank" rel="noopener">https://windows.php.net/download#php-7.2</a><blockquote><p>PHP版本有Non Thread Safe（非线程安全）和Thread Safe（线程安全）区别，Non Thread Safe（非线程安全）适合IIS服务器搭载，使用Apache请选用Thread Safe（线程安全）版本</p></blockquote></li></ul><p>PHP5和PHP7下载好后分别解压到合适的路径下，我的路径PHP5：<code>D:\OZ-Dev\PHP\tools\php-5.6.34-Win32-VC11-x64</code> ,PHP7:<code>D:\OZ-Dev\PHP\tools\php-7.2.3-Win32-VC15-x64</code><br>分别复制<code>php.ini-development</code>文件，将其名修改为<code>php.ini</code>,然后编辑<code>php.ini</code>文件，修改配置如下：</p><ol><li>修改extension_dir<br>PHP5：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension_dir = &quot;D:\OZ-Dev\PHP\tools\php-5.6.34-Win32-VC11-x64\ext&quot;</span><br></pre></td></tr></table></figure></li></ol><p>PHP7：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension_dir = &quot;D:\OZ-Dev\PHP\tools\php-7.2.3-Win32-VC15-x64\ext&quot;</span><br></pre></td></tr></table></figure></p><ol start="2"><li>开启PHP扩展<br>搜索<code>Dynamic Extensions</code>,开启你所需要的扩展，PHP5和PHP7有一定的差异，但都是去掉相应扩展前面的<code>#</code>,下面已开启<code>mysqli</code>扩展为例：<br>PHP5：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=php_mysqli.dll</span><br></pre></td></tr></table></figure></li></ol><p>PHP7:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=mysqli</span><br></pre></td></tr></table></figure></p><blockquote><p>小提示：PHP7不再支持<code>mysql</code>扩展，建议使用<code>extension=pdo_mysql</code>扩展和<code>extension=mysqli</code>扩展</p></blockquote><h3 id="apache配置PHP"><a href="#apache配置PHP" class="headerlink" title="apache配置PHP"></a>apache配置PHP</h3><p>使用编辑器打开 <code>Apache24/conf/httpd.conf</code> 配置文件，新增如下配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># php7 support</span><br><span class="line">LoadModule php7_module &quot;D:/OZ-Dev/PHP/tools/php-7.2.3-Win32-VC15-x64/php7apache2_4.dll&quot;</span><br><span class="line">AddHandler application/x-httpd-php .php</span><br><span class="line"># configure the path to php.ini</span><br><span class="line">PHPIniDir &quot;D:/OZ-Dev/PHP/tools/php-7.2.3-Win32-VC15-x64/&quot;</span><br><span class="line"></span><br><span class="line"># php5 support</span><br><span class="line">#LoadModule php5_module &quot;D:/OZ-Dev/PHP/tools/php-5.6.34-Win32-VC11-x64/php5apache2_4.dll&quot;</span><br><span class="line">#AddHandler application/x-httpd-php .php</span><br><span class="line"># configure the path to php.ini</span><br><span class="line">#PHPIniDir &quot;D:/OZ-Dev/PHP/tools/php-5.6.34-Win32-VC11-x64/&quot;</span><br></pre></td></tr></table></figure></p><p>以上配置使用了PHP7，如想切换到PHP5，请注释掉PHP7 support相关，开启PHP5 support即可。（记得修改之后要重启Apache哦）</p><p>在<code>D:\OZ-Dev\PHP\WorkSpace\index</code>文件夹下新增<code>index.php</code>文件，输入以下代码，然后保存：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br></pre></td></tr></table></figure></p><p>然后再浏览器中输入<a href="http://zxc.index.com/index.php" target="_blank" rel="noopener">http://zxc.index.com/index.php</a> 即可查看PHP相关配置信息，验证PHP是否安装成功。<br><img src="https://i.imgur.com/Ij1H8TP.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;都说PHP是世界上最好的编程语言，啊哈哈~&lt;br&gt;其实语言都是实现解决方案的技术支持，重要的在于解决方案，语言以及框架只是提供技术选型，当然会一门或者多门编程语言是一个程序员必备的技能，也是一个程序员的饭碗，所以精通一门或者多门语言及框架是必要的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面是个人的PHP学习日志，仅供参考，如有不足之处请多多指教，相互学习交流。&lt;br&gt;什么PHP的发展、故事什么的我就不写了，百度百科~😴&lt;/p&gt;
&lt;p&gt;OK，进入主题吧，第一篇是搭建本地的PHP环境，我的电脑是Win10，后面会有专门篇章讲解如何在Linux上搭建&lt;code&gt;LAMP(Linux+Apache+Mysql+PHP)&lt;/code&gt;和&lt;code&gt;LNMP(Linux+Nginx+Mysql+PHP)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;个人喜欢手动搭建环境，所以也就没有使用集成环境了，如果觉得费事可以考虑直接使用集成环境哈~😴&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="https://zxclljf.github.io/categories/PHP/"/>
    
      <category term="PHP学习日志" scheme="https://zxclljf.github.io/categories/PHP/PHP%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
    
    
      <category term="PHP" scheme="https://zxclljf.github.io/tags/PHP/"/>
    
      <category term="Apache" scheme="https://zxclljf.github.io/tags/Apache/"/>
    
      <category term="PHP5" scheme="https://zxclljf.github.io/tags/PHP5/"/>
    
      <category term="PHP7" scheme="https://zxclljf.github.io/tags/PHP7/"/>
    
      <category term="Mysql" scheme="https://zxclljf.github.io/tags/Mysql/"/>
    
      <category term="Navicat for Mysql" scheme="https://zxclljf.github.io/tags/Navicat-for-Mysql/"/>
    
      <category term="WAMP" scheme="https://zxclljf.github.io/tags/WAMP/"/>
    
  </entry>
  
  <entry>
    <title>git代码自动转换换行符问题</title>
    <link href="https://zxclljf.github.io/2018/05/10/git/git%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A8%E8%BD%AC%E6%8D%A2%E6%8D%A2%E8%A1%8C%E7%AC%A6%E9%97%AE%E9%A2%98/"/>
    <id>https://zxclljf.github.io/2018/05/10/git/git代码自动转换换行符问题/</id>
    <published>2018-05-10T08:50:31.000Z</published>
    <updated>2019-05-21T03:03:21.457Z</updated>
    
    <content type="html"><![CDATA[<p>问题：提交到git上的代码多了换行符，如图所示：<br><img src="https://i.imgur.com/ANujTfL.png" alt=""><br><a id="more"></a><br>解决方法：git config<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#开启自动转换</span><br><span class="line">git config --global core.autocrlf true  </span><br><span class="line"></span><br><span class="line">#关闭自动转换</span><br><span class="line">git config --global core.autocrlf false</span><br><span class="line"></span><br><span class="line">#clone下载代码时不转换，输入的时候转换</span><br><span class="line">git config --global core.autocrlf input</span><br></pre></td></tr></table></figure></p><p>将 <code>core.autocrlf</code> 设置为 <code>input</code> 即解决。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;问题：提交到git上的代码多了换行符，如图所示：&lt;br&gt;&lt;img src=&quot;https://i.imgur.com/ANujTfL.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="git" scheme="https://zxclljf.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://zxclljf.github.io/tags/git/"/>
    
      <category term="idea" scheme="https://zxclljf.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+Hexo博客搭建系列（五）--扩展插件篇</title>
    <link href="https://zxclljf.github.io/2018/05/10/Hexo/GitHub-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97%EF%BC%88%E4%BA%94%EF%BC%89-%E6%89%A9%E5%B1%95%E6%8F%92%E4%BB%B6%E7%AF%87/"/>
    <id>https://zxclljf.github.io/2018/05/10/Hexo/GitHub-Hexo博客搭建系列（五）-扩展插件篇/</id>
    <published>2018-05-10T06:25:52.000Z</published>
    <updated>2019-05-21T03:03:21.460Z</updated>
    
    <content type="html"><![CDATA[<h2 id="rss和sitmap插件"><a href="#rss和sitmap插件" class="headerlink" title="rss和sitmap插件"></a>rss和sitmap插件</h2><p>添加sitemap和feed插件，进入到你本地的hexo 目录，在命令行窗口中输入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed -save</span><br><span class="line">npm install hexo-generator-sitemap -save</span><br></pre></td></tr></table></figure></p><p>安装完成后执行命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></p><p>之后，就可以访问 <a href="https://yourname.github.io/atom.xml" target="_blank" rel="noopener">https://yourname.github.io/atom.xml</a> 和 <a href="https://yourname.github.io/sitemap.xml" target="_blank" rel="noopener">https://yourname.github.io/sitemap.xml</a> ，发现这两个文件已经成功生成了。<br><a id="more"></a></p><h2 id="评论插件"><a href="#评论插件" class="headerlink" title="评论插件"></a>评论插件</h2><p>hexo可用的评论插件比较丰富，因为<strong>多说</strong>已经挂了，也就不使用了，下面主要讲述了Disqus、Valine、 Gitment这三个插件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Disqus: 是一家第三方社会化评论系统,主要为网站主提供评论托管服务。(需要翻墙，比较喜欢这个)</span><br><span class="line">Valine： 多说挂了后，出现的一款基于Leancloud的极简风评论系统。（本站暂时使用）</span><br><span class="line">Gitment： GitHub的评论系统，只能GitHub用户登陆评论，而且页面的链接不能带有中文。</span><br></pre></td></tr></table></figure></p><h3 id="Disqus配置"><a href="#Disqus配置" class="headerlink" title="Disqus配置"></a>Disqus配置</h3><h5 id="注册Disqus并创建应用"><a href="#注册Disqus并创建应用" class="headerlink" title="注册Disqus并创建应用"></a>注册Disqus并创建应用</h5><blockquote><p>注意：使用Disqus必须要翻墙哦，推荐一个翻墙工具<a href="http://47.52.5.90/?email=15708486258@163.com" target="_blank" rel="noopener">DomeCross</a>(这个要钱的哈，只能在chrome中使用)，如果有其他好的翻墙工具，请推荐！<a href="mailto:15708486258@163.com" target="_blank" rel="noopener">发邮件</a></p></blockquote><p>Disqus网址：<a href="https://disqus.com/" target="_blank" rel="noopener">https://disqus.com/</a><br>打开链接后， 可以直接用Facebook，Twitter以及 Google 登录；也可以用邮箱注册后登录。</p><p>1、登录后，点击首页的GET STARTED 按钮，点击图示按钮。<br>2、Create a new site<br><img src="https://i.imgur.com/tOviMTI.png" alt=""><br><img src="https://i.imgur.com/a43UEMh.png" alt=""><br>3、<br><img src="https://i.imgur.com/Xri1Xoj.png" alt=""><br>4、<br><img src="https://i.imgur.com/DyT9WkL.png" alt=""><br>5、<br><img src="https://i.imgur.com/y83MlTF.png" alt=""><br>Website URL 填写博客地址，如果Website Name不重复，此Website Name就是shortname。点击Complete SetUp完成配置。</p><h5 id="设置Disqus"><a href="#设置Disqus" class="headerlink" title="设置Disqus"></a>设置Disqus</h5><p>编辑 <strong>主题配置文件</strong> (_config.yml)文件中找到以下代码，添加你Disqus设置的Website Name在shortname处，英文冒号后空格。<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Disqus</span></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  shortname:</span> <span class="string">yourWebsiteName</span></span><br><span class="line"><span class="attr">  count:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h3 id="Valine配置"><a href="#Valine配置" class="headerlink" title="Valine配置"></a>Valine配置</h3><h5 id="注册Leancloud并创建应用"><a href="#注册Leancloud并创建应用" class="headerlink" title="注册Leancloud并创建应用"></a>注册Leancloud并创建应用</h5><p>1、注册<a href="https://leancloud.cn/dashboard/login.html#/signup" target="_blank" rel="noopener">LeanCloud</a><br>2、创建应用<br>3、获取应用APP ID和APP KEY<br>选择刚刚创建的应用&gt;设置&gt;选择应用 Key，然后你就能看到你的APP ID和APP KEY了。</p><h5 id="配置Valine"><a href="#配置Valine" class="headerlink" title="配置Valine"></a>配置Valine</h5><p>编辑 <strong>主题配置文件</strong> (_config.yml)文件中找到以下代码：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine.</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># more info please open https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  appid:</span> <span class="string">your</span> <span class="string">appid</span> <span class="comment"># your leancloud application appid</span></span><br><span class="line"><span class="attr">  appkey:</span> <span class="string">your</span> <span class="string">appkey</span> <span class="comment"># your leancloud application appkey</span></span><br><span class="line"><span class="attr">  notify:</span> <span class="literal">true</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></span><br><span class="line"><span class="attr">  verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line"><span class="attr">  placeholder:</span> <span class="string">your</span> <span class="string">placeholder</span> <span class="comment"># comment box placeholder</span></span><br><span class="line"><span class="attr">  avatar:</span> <span class="string">mm</span> <span class="comment"># gravatar style</span></span><br><span class="line"><span class="attr">  guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># custom comment header</span></span><br><span class="line"><span class="attr">  pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size</span></span><br></pre></td></tr></table></figure></p><h3 id="Gitment配置"><a href="#Gitment配置" class="headerlink" title="Gitment配置"></a>Gitment配置</h3><h5 id="注册OAuth-Application"><a href="#注册OAuth-Application" class="headerlink" title="注册OAuth Application"></a>注册OAuth Application</h5><p>点击<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a> 注册，注意Authorization callback URL填自己的网站url <a href="https://zxclljf.github.io/">https://zxclljf.github.io/</a> .<br><img src="https://i.imgur.com/pNoLwB3.png" alt=""><br>记下Client ID和Client Secret<br><img src="https://i.imgur.com/bhdVhMD.png" alt=""></p><p>#####<br>编辑 <strong>主题配置文件</strong> (_config.yml)文件中找到以下代码：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gitment</span></span><br><span class="line"><span class="comment"># Introduction: https://imsun.net/posts/gitment-introduction/</span></span><br><span class="line"><span class="comment"># You can get your Github ID from https://api.github.com/users/&lt;Github username&gt;</span></span><br><span class="line"><span class="attr">gitment:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  mint:</span> <span class="literal">true</span> <span class="comment"># RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span></span><br><span class="line"><span class="attr">  count:</span> <span class="literal">true</span> <span class="comment"># Show comments count in post meta area</span></span><br><span class="line"><span class="attr">  lazy:</span> <span class="literal">false</span> <span class="comment"># Comments lazy loading with a button</span></span><br><span class="line"><span class="attr">  cleanly:</span> <span class="literal">false</span> <span class="comment"># Hide 'Powered by ...' on footer, and more</span></span><br><span class="line"><span class="attr">  language:</span> <span class="comment"># Force language, or auto switch by theme</span></span><br><span class="line"><span class="attr">  github_user:</span> <span class="string">zxclljf</span> <span class="comment"># MUST HAVE, Your Github ID</span></span><br><span class="line"><span class="attr">  github_repo:</span> <span class="attr">https://github.com/zxclljf/zxclljf.github.com</span> <span class="comment"># MUST HAVE, The repo you use to store Gitment comments</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="number">5867</span><span class="string">ca7a84c087b7569e</span> <span class="comment"># MUST HAVE, Github client id for the Gitment</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="number">54</span><span class="string">a11ec63faf80aebfd0f887f50c9b232ea52c0e</span> <span class="comment"># EITHER this or proxy_gateway, Github access secret token for the Gitment</span></span><br><span class="line"><span class="attr">  proxy_gateway:</span> <span class="comment"># Address of api proxy, See: https://github.com/aimingoo/intersect</span></span><br><span class="line"><span class="attr">  redirect_protocol:</span> <span class="comment"># Protocol of redirect_uri with force_redirect_protocol when mint enabled</span></span><br></pre></td></tr></table></figure></p><p>嗯，差不多了，啊哈哈~😴GitHub+Hexo博客搭建系列就到此结束把，如有什么问题欢迎反馈，我会及时纠正。直接给我<a href="mailto:15708486258@163.com" target="_blank" rel="noopener">发邮件</a>吧，这样更及时哈~😴</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;rss和sitmap插件&quot;&gt;&lt;a href=&quot;#rss和sitmap插件&quot; class=&quot;headerlink&quot; title=&quot;rss和sitmap插件&quot;&gt;&lt;/a&gt;rss和sitmap插件&lt;/h2&gt;&lt;p&gt;添加sitemap和feed插件，进入到你本地的hexo 目录，在命令行窗口中输入以下命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-generator-feed -save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-generator-sitemap -save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装完成后执行命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo d -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;之后，就可以访问 &lt;a href=&quot;https://yourname.github.io/atom.xml&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://yourname.github.io/atom.xml&lt;/a&gt; 和 &lt;a href=&quot;https://yourname.github.io/sitemap.xml&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://yourname.github.io/sitemap.xml&lt;/a&gt; ，发现这两个文件已经成功生成了。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://zxclljf.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://zxclljf.github.io/tags/Hexo/"/>
    
      <category term="rss" scheme="https://zxclljf.github.io/tags/rss/"/>
    
      <category term="sitmap" scheme="https://zxclljf.github.io/tags/sitmap/"/>
    
      <category term="插件" scheme="https://zxclljf.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
      <category term="评论" scheme="https://zxclljf.github.io/tags/%E8%AF%84%E8%AE%BA/"/>
    
      <category term="Disqus" scheme="https://zxclljf.github.io/tags/Disqus/"/>
    
      <category term="Valine" scheme="https://zxclljf.github.io/tags/Valine/"/>
    
      <category term="Gitment" scheme="https://zxclljf.github.io/tags/Gitment/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+Hexo博客搭建系列（四）--发布文章及Markdown篇</title>
    <link href="https://zxclljf.github.io/2018/05/10/Hexo/GitHub-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97%EF%BC%88%E5%9B%9B%EF%BC%89-%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%E5%8F%8AMarkdown%E7%AF%87/"/>
    <id>https://zxclljf.github.io/2018/05/10/Hexo/GitHub-Hexo博客搭建系列（四）-发布文章及Markdown篇/</id>
    <published>2018-05-10T02:42:36.000Z</published>
    <updated>2019-05-21T03:03:21.466Z</updated>
    
    <content type="html"><![CDATA[<p>前面几篇是说如何安装配置，此篇将讲述如何发布博文，如何使用Markdown工具编辑博文。</p><h2 id="新建博文"><a href="#新建博文" class="headerlink" title="新建博文"></a>新建博文</h2><p>在站点目录下打开git bash,输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"文章标题"</span></span><br></pre></td></tr></table></figure></p><p>你将会在<code>source/_post/</code>目录下看见新增的 <code>文章标题.md</code> 文件，文件可用记事本打开,下面是文章的初始内容：<br><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 2018-05-10 11:14:31</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>title:文章标题<br>date:文章创建日期<br>tags:文章标签 [Hexo,Markdown]<br>categories:文章分类 [Hexo]<br>下面是配置此文章的参数：<br><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 2018-05-10 11:14:31</span><br><span class="line">tags: [Hexo,Markdown]</span><br><span class="line">categories: [Hexo]</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>tags和categories参数可为空，配置格式为[xx1,xx2]</p><p>然后输入命令,即可查看本地的新增博文了：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g //生成</span><br><span class="line">hexo s //启动本地服务</span><br></pre></td></tr></table></figure></p><p>或者直接输入命令，发布到Github上进行查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g //生成</span><br><span class="line">hexo d //部署</span><br></pre></td></tr></table></figure><p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g //部署前先生成</span><br></pre></td></tr></table></figure></p><h2 id="使用Markdown编辑博文"><a href="#使用Markdown编辑博文" class="headerlink" title="使用Markdown编辑博文"></a>使用Markdown编辑博文</h2><h3 id="1、安装Markdown"><a href="#1、安装Markdown" class="headerlink" title="1、安装Markdown"></a>1、安装Markdown</h3><p><a href="http://markdownpad.com/download.html" target="_blank" rel="noopener">Markdown下载地址</a></p><h3 id="2、Markdown激活方法"><a href="#2、Markdown激活方法" class="headerlink" title="2、Markdown激活方法"></a>2、Markdown激活方法</h3><p>请参考这篇博文：<a href="https://www.jianshu.com/p/9e5cd946696d" target="_blank" rel="noopener">MarkdownPad2.5 注册码</a></p><h3 id="3、Markdown-编辑器语法指南"><a href="#3、Markdown-编辑器语法指南" class="headerlink" title="3、Markdown 编辑器语法指南"></a>3、Markdown 编辑器语法指南</h3><p><a href="https://segmentfault.com/markdown" target="_blank" rel="noopener">Markdown 编辑器语法指南</a><br><a href="https://hacpai.com/guide/markdown" target="_blank" rel="noopener">Markdown 教程</a></p><h3 id="4、Markdown插入图片"><a href="#4、Markdown插入图片" class="headerlink" title="4、Markdown插入图片"></a>4、Markdown插入图片</h3><blockquote><p>先要激活Markdown才能使用图片上传功能，或者不能上传本地图片<br><img src="https://i.imgur.com/qZcejzd.png" alt=""></p></blockquote><h3 id="5、Markdown代码块"><a href="#5、Markdown代码块" class="headerlink" title="5、Markdown代码块"></a>5、Markdown代码块</h3><p>markdown里对代码块的引用语法是三个撇[`] ,在其后可增加代码名称,比如java,js等标记该部分代码的类型，之后在页面展现的时候就可以高亮显示关键字了。<br>markdown支持以下语言高亮显示：</p><table><thead><tr><th>名称</th><th style="text-align:center">关键字</th><th style="text-align:center">调用的js</th></tr></thead><tbody><tr><td>AppleScript</td><td style="text-align:center">applescript</td><td style="text-align:center">shBrushAppleScript.js</td></tr><tr><td>ActionScript 3.0</td><td style="text-align:center">actionscript3 , as3</td><td style="text-align:center">shBrushAS3.js</td></tr><tr><td>Shell</td><td style="text-align:center">bash , shell</td><td style="text-align:center">shBrushBash.js</td></tr><tr><td>ColdFusion</td><td style="text-align:center">coldfusion , cf</td><td style="text-align:center">shBrushColdFusion.js</td></tr><tr><td>C</td><td style="text-align:center">cpp , c</td><td style="text-align:center">shBrushCpp.js</td></tr><tr><td>C#</td><td style="text-align:center">c# , c-sharp , csharp</td><td style="text-align:center">shBrushCSharp.js</td></tr><tr><td>CSS</td><td style="text-align:center">css</td><td style="text-align:center">shBrushCss.js</td></tr><tr><td>Delphi</td><td style="text-align:center">delphi , pascal , pas</td><td style="text-align:center">shBrushDelphi.js</td></tr><tr><td>diff&amp;patch</td><td style="text-align:center">diff patch</td><td style="text-align:center">shBrushDiff.js</td></tr><tr><td>Erlang</td><td style="text-align:center">erl , erlang</td><td style="text-align:center">shBrushErlang.js</td></tr><tr><td>Groovy</td><td style="text-align:center">groovy</td><td style="text-align:center">shBrushGroovy.js</td></tr><tr><td>Java</td><td style="text-align:center">java</td><td style="text-align:center">shBrushJava.js</td></tr><tr><td>JavaFX</td><td style="text-align:center">jfx , javafx</td><td style="text-align:center">shBrushJavaFX.js</td></tr><tr><td>JavaScript</td><td style="text-align:center">js , jscript , javascript</td><td style="text-align:center">shBrushJScript.js    </td></tr><tr><td>Perl</td><td style="text-align:center">perl , pl , Perl</td><td style="text-align:center">shBrushPerl.js</td></tr><tr><td>PHP</td><td style="text-align:center">php</td><td style="text-align:center">shBrushPhp.js</td></tr><tr><td>text</td><td style="text-align:center">text , plain</td><td style="text-align:center">shBrushPlain.js</td></tr><tr><td>Python</td><td style="text-align:center">py , python</td><td style="text-align:center">shBrushPython.js</td></tr><tr><td>Ruby</td><td style="text-align:center">ruby , rails , ror , rb</td><td style="text-align:center">shBrushRuby.js</td></tr><tr><td>SASS&amp;SCSS</td><td style="text-align:center">sass , scss</td><td style="text-align:center">shBrushSass.js</td></tr><tr><td>Scala</td><td style="text-align:center">scala</td><td style="text-align:center">shBrushScala.js</td></tr><tr><td>SQL</td><td style="text-align:center">sql</td><td style="text-align:center">shBrushSql.js</td></tr><tr><td>Visual Basic</td><td style="text-align:center">vb , vbnet</td><td style="text-align:center">shBrushVb.js</td></tr><tr><td>XML</td><td style="text-align:center">xml , xhtml , xslt , html</td><td style="text-align:center">shBrushXml.js</td></tr><tr><td>Objective C</td><td style="text-align:center">objc , obj-c</td><td style="text-align:center">shBrushObjectiveC.js</td></tr><tr><td>F#</td><td style="text-align:center">f# f-sharp , fsharp</td><td style="text-align:center">shBrushFSharp.js</td></tr><tr><td></td><td style="text-align:center">xpp , dynamics-xpp</td><td style="text-align:center">shBrushDynamics.js</td></tr><tr><td>R</td><td style="text-align:center">r , s , splus</td><td style="text-align:center">shBrushR.js</td></tr><tr><td>matlab</td><td style="text-align:center">matlab</td><td style="text-align:center">shBrushMatlab.js</td></tr><tr><td>swift</td><td style="text-align:center">swift</td><td style="text-align:center">shBrushSwift.js</td></tr><tr><td>GO</td><td style="text-align:center">go , golang</td><td style="text-align:center">shBrushGo.js</td></tr></tbody></table><h3 id="6、Markdown表格"><a href="#6、Markdown表格" class="headerlink" title="6、Markdown表格"></a>6、Markdown表格</h3><p>简单方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">名称|关键字|调用的js</span><br><span class="line"> - | :-: | :-:  </span><br><span class="line">AppleScript|applescript|shBrushAppleScript.js </span><br><span class="line">ActionScript 3.0|actionscript3 , as3|shBrushAS3.js</span><br></pre></td></tr></table></figure></p><p>原生方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|名称|关键字|调用的js|</span><br><span class="line">| - | :-: | :-: |</span><br><span class="line">|AppleScript|applescript|shBrushAppleScript.js| </span><br><span class="line">|ActionScript 3.0|actionscript3 , as3|shBrushAS3.js|</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>名称</th><th style="text-align:center">关键字</th><th style="text-align:center">调用的js</th></tr></thead><tbody><tr><td>AppleScript</td><td style="text-align:center">applescript</td><td style="text-align:center">shBrushAppleScript.js</td></tr><tr><td>ActionScript 3.0</td><td style="text-align:center">actionscript3 , as3</td><td style="text-align:center">shBrushAS3.js</td></tr></tbody></table><p>语法说明： </p><ol><li>第一行为表头，第二行分隔表头和主体部分，第三行开始每一行代表一个表格行； </li><li>列与列之间用管道符号 “|” 隔开，原生方式的表格每一行的两边也要有管道符。 </li><li>可在第二行指定不同列单元格内容的对齐方式，默认为左对齐，在 “-” 右边加上 “:” 为右对齐，在 “-” 两侧同时加上 “:” 为居中对齐。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前面几篇是说如何安装配置，此篇将讲述如何发布博文，如何使用Markdown工具编辑博文。&lt;/p&gt;
&lt;h2 id=&quot;新建博文&quot;&gt;&lt;a href=&quot;#新建博文&quot; class=&quot;headerlink&quot; title=&quot;新建博文&quot;&gt;&lt;/a&gt;新建博文&lt;/h2&gt;&lt;p&gt;在站点目录下打开git bash,输入命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new post &lt;span class=&quot;string&quot;&gt;&quot;文章标题&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你将会在&lt;code&gt;source/_post/&lt;/code&gt;目录下看见新增的 &lt;code&gt;文章标题.md&lt;/code&gt; 文件，文件可用记事本打开,下面是文章的初始内容：&lt;br&gt;&lt;figure class=&quot;highlight md&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: 文章标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2018-05-10 11:14:31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://zxclljf.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://zxclljf.github.io/tags/Hexo/"/>
    
      <category term="GitHub" scheme="https://zxclljf.github.io/tags/GitHub/"/>
    
      <category term="Markdown" scheme="https://zxclljf.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+Hexo博客搭建系列（三）--Hexo主题配置篇</title>
    <link href="https://zxclljf.github.io/2018/05/09/Hexo/GitHub-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%89%EF%BC%89-Hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E7%AF%87/"/>
    <id>https://zxclljf.github.io/2018/05/09/Hexo/GitHub-Hexo博客搭建系列（三）-Hexo主题配置篇/</id>
    <published>2018-05-09T05:50:52.000Z</published>
    <updated>2019-05-21T03:03:21.463Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo有两个比较好的主题，一个是Yilia主题，Yilia 是为 hexo 2.4+制作的主题，崇尚简约优雅，以及极致的性能，GitHub地址：<a href="https://litten.github.io/" target="_blank" rel="noopener">https://litten.github.io/</a> ；另一个是Next主题， 目前Github上Star最高的Hexo主题，支持几种不同的风格，Github地址：<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> ，下面使用的将是Next。</p><h2 id="Next的安装配置"><a href="#Next的安装配置" class="headerlink" title="Next的安装配置"></a>Next的安装配置</h2><blockquote><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>。 比如我的电脑下的 <code>D:\OZ-Dev\GitHub\WorkSpace\hexo\hexoSpace</code> 目录下的 _config.yml为 站点配置文件，<code>D:\OZ-Dev\GitHub\WorkSpace\hexo\hexoSpace\themes\next</code> 目录下的 _config.yml为主题配置文件。<br><a id="more"></a></p></blockquote><h3 id="1、Next的安装"><a href="#1、Next的安装" class="headerlink" title="1、Next的安装"></a>1、Next的安装</h3><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。<br>推荐使用<code>git clone</code>方式安装，这样也方便以后直接使用<code>git pull</code>进行更新，下面将使用这种方式<br>在站点目录打开git bash,输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>当 克隆/下载 完成后，打开<strong>站点配置文件</strong>， 找到 theme 字段，并将其值更改为 next。 启用 NexT 主题:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure></p><p>然后依次输入以下命令查看是否安装成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean//清除缓存</span><br><span class="line">hexo g//生成</span><br><span class="line">hexo s --debug//启动本地环境，加上--debug可以方便的查看是否有异常</span><br></pre></td></tr></table></figure></p><p>此时即可使用浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> ，检查站点是否正确运行。</p><h3 id="2、Next风格配置"><a href="#2、Next风格配置" class="headerlink" title="2、Next风格配置"></a>2、Next风格配置</h3><p>打开 themes/next/_config.yml 文件，搜索 scheme 关键字，将你需用启用的 scheme 前面注释 # 去除即可。<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse# 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</span></span><br><span class="line"><span class="comment">#scheme: Mist# Muse 的紧凑版本，整洁有序的单栏外观</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Pisces</span><span class="comment"># 双栏 Scheme，小家碧玉似的清新</span></span><br><span class="line"><span class="comment">#scheme: Gemini# 类似 Pisces</span></span><br></pre></td></tr></table></figure></p><h3 id="3、其他配置"><a href="#3、其他配置" class="headerlink" title="3、其他配置"></a>3、其他配置</h3><blockquote><p>下面的配置都是我使用的配置，有其他需求请参照其他</p></blockquote><h5 id="（1）、站点基本信息设置"><a href="#（1）、站点基本信息设置" class="headerlink" title="（1）、站点基本信息设置"></a>（1）、站点基本信息设置</h5><p>编辑 <strong>站点配置文件</strong>，设置一些基本信息配置如下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">OrangeZh</span><span class="comment">#站点标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">Welcome</span> <span class="string">to</span> <span class="string">orangeZh`s</span> <span class="string">Blog!</span><span class="comment">#站点副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">😴懒人的世界少有阳光😴</span><span class="comment">#站点描述</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">OrangeZh</span><span class="comment">#站点作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span><span class="comment">#站点语言</span></span><br><span class="line"><span class="attr">timezone:</span><span class="comment">#站点时区</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://zxclljf.github.io</span></span><br></pre></td></tr></table></figure></p><p>目前 NexT 支持的一些语言：</p><table><thead><tr><th>语言</th><th style="text-align:center">代码</th><th style="text-align:right">设定实例 </th></tr></thead><tbody><tr><td>English</td><td style="text-align:center">en</td><td style="text-align:right">language: en</td></tr><tr><td>简体中文</td><td style="text-align:center">zh-Hans</td><td style="text-align:right">language: zh-Hans</td></tr><tr><td>Français</td><td style="text-align:center">fr-FR</td><td style="text-align:right">language: fr-FR</td></tr><tr><td>Português</td><td style="text-align:center">pt</td><td style="text-align:right">language: pt</td></tr><tr><td>繁體中文</td><td style="text-align:center">zh-hk 或者 zh-tw</td><td style="text-align:right">language: zh-hk</td></tr><tr><td>Русский язык</td><td style="text-align:center">ru</td><td style="text-align:right">language: ru</td></tr><tr><td>Deutsch</td><td style="text-align:center">de</td><td style="text-align:right">language: de</td></tr><tr><td>日本語</td><td style="text-align:center">ja</td><td style="text-align:right">language: ja</td></tr><tr><td>Indonesian</td><td style="text-align:center">id</td><td style="text-align:right">language: id</td></tr></tbody></table><h5 id="（2）、头像和站点favicon设置"><a href="#（2）、头像和站点favicon设置" class="headerlink" title="（2）、头像和站点favicon设置"></a>（2）、头像和站点favicon设置</h5><p>编辑 <strong>主题配置文件</strong></p><ul><li><p>找到avatar字段，设置你的头像图片：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="comment"># in theme directory(source/images): /images/avatar.gif</span></span><br><span class="line"><span class="comment"># in site  directory(source/uploads): /uploads/avatar.gif</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/images/35-orange.png</span></span><br></pre></td></tr></table></figure></li><li><p>找到favicon字段，设置你的站点icon：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line"><span class="attr">  small:</span> <span class="string">/images/35-orange.png</span></span><br><span class="line"><span class="attr">  medium:</span> <span class="string">/images/35-orange.png</span></span><br><span class="line"><span class="attr">  apple_touch_icon:</span> <span class="string">/images/35-orange.png</span></span><br><span class="line"><span class="attr">  safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="（3）、设置你的社交链接"><a href="#（3）、设置你的社交链接" class="headerlink" title="（3）、设置你的社交链接"></a>（3）、设置你的社交链接</h5><p>编辑 <strong>主题配置文件</strong><br>找到social字段，设置你的社交链接：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/zxclljf</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line"><span class="attr">  E-Mail:</span> <span class="attr">mailto:15708486258@163.com</span> <span class="string">||</span> <span class="string">envelope</span></span><br><span class="line">  <span class="string">FB</span> <span class="attr">Page:</span> <span class="attr">https://www.facebook.com/orangeZh1994</span> <span class="string">||</span> <span class="string">facebook</span></span><br></pre></td></tr></table></figure></p><blockquote><p>NexT 使用的是 <a href="https://www.colabug.com/goto/aHR0cDovL2ZvbnRhd2Vzb21lLmRhc2hnYW1lLmNvbS8=" target="_blank" rel="noopener">Font Awesome</a> 提供的图标,<code>Key: permalink || icon</code>格式中的icon即为图标名称。</p></blockquote><h5 id="（4）、开启标签和分类菜单"><a href="#（4）、开启标签和分类菜单" class="headerlink" title="（4）、开启标签和分类菜单"></a>（4）、开启标签和分类菜单</h5><p>编辑 <strong>主题配置文件</strong><br>找到Menu Setting，设置你菜单：<br>去掉tags和categroies前面的<code>#</code><br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimeter is the target link.</span></span><br><span class="line"><span class="comment"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span><span class="comment">#首页</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span><span class="comment">#标签</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span><span class="comment">#分类</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span><span class="comment">#归档</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap#网站地图</span></span><br><span class="line">  <span class="comment">#commonweal: /404.html || heartbeat#404</span></span><br></pre></td></tr></table></figure></p><p>在git bash中执行命令创建页面：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">"tags"</span>//新增tags页面</span><br><span class="line">hexo new page <span class="string">"categories"</span>//新增categories页面</span><br></pre></td></tr></table></figure></p><p>执行之后会在<code>source/</code>目录下生成<code>tags/</code>和<code>categories/</code>两个文件夹<br>打开<code>source/tags/index.md</code>进行编辑：<br><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2018-05-07 15:25:01</span><br><span class="line">type: "tags"</span><br><span class="line">comments: false </span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>打开<code>source/categories/index.md</code>进行编辑：<br><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2018-05-07 15:18:43</span><br><span class="line">type: "categories"</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p><code>comments: false</code>是在此页面禁止显示评论</p><h5 id="（5）、配置本地搜索"><a href="#（5）、配置本地搜索" class="headerlink" title="（5）、配置本地搜索"></a>（5）、配置本地搜索</h5><p>在你站点的根目录下打开git bash,执行命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></p><p>安装好插件后，打开 <strong>站点配置文件</strong> ,添加配置：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></p><p>然后编辑 <strong>主题配置文件</strong>，<code>enable: true</code>开启本地搜索：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line"><span class="attr">  trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line"><span class="attr">  top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></p><h5 id="（6）、其他配置"><a href="#（6）、其他配置" class="headerlink" title="（6）、其他配置"></a>（6）、其他配置</h5><p>编辑 <strong>主题配置文件</strong><br>开启百度推送：<code>baidu_push: true</code><br>开启seo:<code>seo: true</code><br>开启回到顶部：<code>b2t: true</code><br>开启阅读进度：<code>scrollpercent: true</code></p><p>到此，主题的基本配置就完成了~啊哈哈😀😴</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo有两个比较好的主题，一个是Yilia主题，Yilia 是为 hexo 2.4+制作的主题，崇尚简约优雅，以及极致的性能，GitHub地址：&lt;a href=&quot;https://litten.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://litten.github.io/&lt;/a&gt; ；另一个是Next主题， 目前Github上Star最高的Hexo主题，支持几种不同的风格，Github地址：&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/iissnan/hexo-theme-next&lt;/a&gt; ，下面使用的将是Next。&lt;/p&gt;
&lt;h2 id=&quot;Next的安装配置&quot;&gt;&lt;a href=&quot;#Next的安装配置&quot; class=&quot;headerlink&quot; title=&quot;Next的安装配置&quot;&gt;&lt;/a&gt;Next的安装配置&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 为了描述方便，在以下说明中，将前者称为 &lt;strong&gt;站点配置文件&lt;/strong&gt;， 后者称为 &lt;strong&gt;主题配置文件&lt;/strong&gt;。 比如我的电脑下的 &lt;code&gt;D:\OZ-Dev\GitHub\WorkSpace\hexo\hexoSpace&lt;/code&gt; 目录下的 _config.yml为 站点配置文件，&lt;code&gt;D:\OZ-Dev\GitHub\WorkSpace\hexo\hexoSpace\themes\next&lt;/code&gt; 目录下的 _config.yml为主题配置文件。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://zxclljf.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://zxclljf.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="https://zxclljf.github.io/tags/Github/"/>
    
      <category term="Net" scheme="https://zxclljf.github.io/tags/Net/"/>
    
      <category term="Yilia" scheme="https://zxclljf.github.io/tags/Yilia/"/>
    
      <category term="Hexo主题" scheme="https://zxclljf.github.io/tags/Hexo%E4%B8%BB%E9%A2%98/"/>
    
      <category term="Net主题" scheme="https://zxclljf.github.io/tags/Net%E4%B8%BB%E9%A2%98/"/>
    
      <category term="Yilia主题" scheme="https://zxclljf.github.io/tags/Yilia%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+Hexo博客搭建系列（二）--Hexo安装配置篇</title>
    <link href="https://zxclljf.github.io/2018/05/09/Hexo/GitHub-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97%EF%BC%88%E4%BA%8C%EF%BC%89-Hexo%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E7%AF%87/"/>
    <id>https://zxclljf.github.io/2018/05/09/Hexo/GitHub-Hexo博客搭建系列（二）-Hexo安装配置篇/</id>
    <published>2018-05-09T01:47:15.000Z</published>
    <updated>2019-05-21T03:03:21.471Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><p>在你自己的本地新建一个文件夹准备安装hexo,我的文件夹是在<code>D:\OZ-Dev\GitHub\WorkSpace\hexo</code><br>，进入文件夹，右键打开Git Bash,输入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/DbVxbMu.png" alt=""><br><a id="more"></a><br>可能你会看到一个WARN，但是不用担心，这不会影响你的正常使用。 然后输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure></p><p>然后你会看到Bash刷了一大堆😴，下面我们来看一看Hexo是不是已经安装好了。 在命令行中输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure></p><p>如果你看到了如图结果，说明已经安装成功了。<br><img src="https://i.imgur.com/0Ox7th3.png" alt=""></p><h2 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h2><p>新建文件夹<code>D:\OZ-Dev\GitHub\WorkSpace\hexo\hexoSpace</code>,进入文件夹打开Git Bash,输入Hexo初始化命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></p><p>然后输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></p><p>npm将会自动安装你需要的组件，等待npm安装完成。</p><h2 id="首次运行体验"><a href="#首次运行体验" class="headerlink" title="首次运行体验"></a>首次运行体验</h2><p>输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></p><p>生成静态文件<br><img src="https://i.imgur.com/QZ7FV0F.png" alt=""><br>然后输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p>启动本地调试<br><img src="https://i.imgur.com/ynouGHE.png" alt=""><br>在浏览器中输入<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>，你将会看见😴：<br><img src="https://i.imgur.com/Z0oPrf5.png" alt=""></p><h2 id="Hexo与github-page-关联"><a href="#Hexo与github-page-关联" class="headerlink" title="Hexo与github page 关联"></a>Hexo与github page 关联</h2><h3 id="1、配置git信息"><a href="#1、配置git信息" class="headerlink" title="1、配置git信息"></a>1、配置git信息</h3><p>如果你之前已经配置好git个人信息，请跳过此步骤<br>在git bash中输入<code>git config --list</code>可查看配置信息<br><img src="https://i.imgur.com/6MhNwlr.png" alt=""></p><ul><li><p>设置Git的user name和email：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"yourname"</span></span><br><span class="line">git config --global user.email <span class="string">"youremail"</span></span><br></pre></td></tr></table></figure></li><li><p>生成密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"youremail"</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2、配置Deployment"><a href="#2、配置Deployment" class="headerlink" title="2、配置Deployment"></a>2、配置Deployment</h3><p>使用编辑器打开<code>D:\OZ-Dev\GitHub\WorkSpace\hexo\hexoSpace</code>目录下的_config.yml配置文件（此文件为hexo的配置文件），找到Deployment，然后按照如下修改：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:yourname/yourname.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></p><h3 id="3、安装hexo-deployer-git扩展"><a href="#3、安装hexo-deployer-git扩展" class="headerlink" title="3、安装hexo-deployer-git扩展"></a>3、安装hexo-deployer-git扩展</h3><p>安装命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>如果不提前安装此扩展，在后面部署的时候会出现错误：</p><blockquote><p>deloyer not found:git</p></blockquote><h3 id="4、部署到Github上"><a href="#4、部署到Github上" class="headerlink" title="4、部署到Github上"></a>4、部署到Github上</h3><p>输入命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   // 生成</span><br><span class="line">hexo d   // 部署</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g //在部署前先生成</span><br></pre></td></tr></table></figure></p><p>然后你就可以在Github上看见你的东西啦~😴，在浏览器输入<a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a> 就可以看见啦~😴(这是我的：<a href="https://zxclljf.github.io">https://zxclljf.github.io</a>)</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hexo安装&quot;&gt;&lt;a href=&quot;#Hexo安装&quot; class=&quot;headerlink&quot; title=&quot;Hexo安装&quot;&gt;&lt;/a&gt;Hexo安装&lt;/h2&gt;&lt;p&gt;在你自己的本地新建一个文件夹准备安装hexo,我的文件夹是在&lt;code&gt;D:\OZ-Dev\GitHub\WorkSpace\hexo&lt;/code&gt;&lt;br&gt;，进入文件夹，右键打开Git Bash,输入以下命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-cli -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/DbVxbMu.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://zxclljf.github.io/categories/Hexo/"/>
    
    
      <category term="git" scheme="https://zxclljf.github.io/tags/git/"/>
    
      <category term="Hexo" scheme="https://zxclljf.github.io/tags/Hexo/"/>
    
      <category term="GitHub" scheme="https://zxclljf.github.io/tags/GitHub/"/>
    
      <category term="Node.js" scheme="https://zxclljf.github.io/tags/Node-js/"/>
    
      <category term="Hexo配置" scheme="https://zxclljf.github.io/tags/Hexo%E9%85%8D%E7%BD%AE/"/>
    
      <category term="Hexo安装" scheme="https://zxclljf.github.io/tags/Hexo%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+Hexo博客搭建系列（一）--前期准备篇</title>
    <link href="https://zxclljf.github.io/2018/05/08/Hexo/GitHub-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89-%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87%E7%AF%87/"/>
    <id>https://zxclljf.github.io/2018/05/08/Hexo/GitHub-Hexo博客搭建系列（一）-前期准备篇/</id>
    <published>2018-05-08T08:06:59.000Z</published>
    <updated>2019-05-21T03:03:21.469Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一直想在Github上搭建一个自己的博客，近期也花了点儿时间对其进行搭建，就此写下搭建系列博客以测验，以下步骤均亲测，也遇到些小坑。系列博客仅供参考学习，如有错误之处请留言指教（留言方式：文章底部评论 or <a href="mailto:15708486258@163.com" target="_blank" rel="noopener">发邮件</a>）,邮箱留言更及时，请优先选择<a href="mailto:15708486258@163.com" target="_blank" rel="noopener">发邮件</a>。</p></blockquote><h2 id="前期准备有以下几步："><a href="#前期准备有以下几步：" class="headerlink" title="前期准备有以下几步："></a>前期准备有以下几步：</h2><ol><li>Node.js的安装</li><li>Git安装</li><li>GitHub账户注册及配置<a id="more"></a><h2 id="Node-js的安装"><a href="#Node-js的安装" class="headerlink" title="Node.js的安装"></a>Node.js的安装</h2>下载Node.js:</li></ol><ul><li><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x86.msi" target="_blank" rel="noopener">Windows Installer 32-bit</a></li><li><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi" target="_blank" rel="noopener">Windows Installer 64-bit</a></li></ul><p>根据自己的Windows版本选择安装，安装步骤截图就不一一贴了。（如遇问题，详细安装教程请另行百度啦~😴）<br>验证是否安装成功：Win+R,输入CMD<br><img src="https://i.imgur.com/7xwPlsX.png" alt=""></p><p>使用如下命令查看安装版本：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure></p><p><img src="https://i.imgur.com/tWR7Ylu.png" alt=""></p><h2 id="Git的安装配置"><a href="#Git的安装配置" class="headerlink" title="Git的安装配置"></a>Git的安装配置</h2><p>下载Git安装文件：</p><ul><li><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git官网下载地址</a></li></ul><p>Git安装贴图<del>~</del>[图片丢失]😴</p><p>查看Git是否配置成功：<br>因为安装时没有指定PATH，所以点击鼠标右键看是否有Git Bash<br>打开Git Bash输入<code>git --version</code><br><img src="https://i.imgur.com/aiK0X2v.png" alt=""></p><p>关于git的下载即安装，可以参考这一篇博客： <a href="http://blog.csdn.net/gdutxiaoxu/article/details/53573286" target="_blank" rel="noopener">Git下载及配置环境变量</a></p><h2 id="GitHub配置"><a href="#GitHub配置" class="headerlink" title="GitHub配置"></a>GitHub配置</h2><p>第一步：注册Github账号（如已有请跳过😴）</p><p><a href="https://github.com/" target="_blank" rel="noopener">GitHub官网</a></p><p>第二步：创建代码库</p><p><img src="https://i.imgur.com/N9O4Mcg.png" alt=""></p><p>输入代码库名称等信息<br><img src="https://i.imgur.com/D7ZOiSl.png" alt=""></p><p style="color:red;font-weight:bold">注意：比如我的github名称是zxclljf ,这里你就填 zxclljf.github.io,如果你的名字是orange，那你就填 orange.github.io</p><p>进入代码库 Setting 设置GitHub Pages<br><img src="https://i.imgur.com/eElqzSz.png" alt=""><br><img src="https://i.imgur.com/QeRC1KH.png" alt=""></p><p>到此搭建hexo博客的相关前期配置已经完成，下面开始讲解Hexo的相关配置</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一直想在Github上搭建一个自己的博客，近期也花了点儿时间对其进行搭建，就此写下搭建系列博客以测验，以下步骤均亲测，也遇到些小坑。系列博客仅供参考学习，如有错误之处请留言指教（留言方式：文章底部评论 or &lt;a href=&quot;mailto:15708486258@163.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;发邮件&lt;/a&gt;）,邮箱留言更及时，请优先选择&lt;a href=&quot;mailto:15708486258@163.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;发邮件&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前期准备有以下几步：&quot;&gt;&lt;a href=&quot;#前期准备有以下几步：&quot; class=&quot;headerlink&quot; title=&quot;前期准备有以下几步：&quot;&gt;&lt;/a&gt;前期准备有以下几步：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Node.js的安装&lt;/li&gt;
&lt;li&gt;Git安装&lt;/li&gt;
&lt;li&gt;GitHub账户注册及配置
    
    </summary>
    
      <category term="Hexo" scheme="https://zxclljf.github.io/categories/Hexo/"/>
    
    
      <category term="git" scheme="https://zxclljf.github.io/tags/git/"/>
    
      <category term="Hexo" scheme="https://zxclljf.github.io/tags/Hexo/"/>
    
      <category term="GitHub" scheme="https://zxclljf.github.io/tags/GitHub/"/>
    
      <category term="Node.js" scheme="https://zxclljf.github.io/tags/Node-js/"/>
    
  </entry>
  
</feed>
